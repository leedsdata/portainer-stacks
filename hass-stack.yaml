version: '3.7'

services:
  homeassistant:
    image: homeassistant/home-assistant:stable
    volumes:
      - /docker/homeassistant/config:/config
    ports:
      - "8123:8123"
    environment:
      TZ: ${TZ}
    restart: unless-stopped
    networks:
      - external
      - internal
    depends_on:
      - mariadb
    logging:
      driver: syslog
      options:
        syslog-address: "udp://192.168.1.141:514"
        tag: "homeassistant"

  mariadb:
    image: mariadb:latest
    volumes:
      - /mariadb/mariadb/data:/var/lib/mysql
      - /mariadb/mariadb/conf:/etc/mysql/conf.d
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      TZ: ${TZ}
    restart: unless-stopped
    networks:
      - internal
    logging:
      driver: syslog
      options:
        syslog-address: "udp://192.168.1.141:514"
        tag: "mariadb"

  mosquitto:
    image: eclipse-mosquitto:latest
    volumes:
      - /docker/mosquitto/config:/mosquitto/config
      - /docker/mosquitto/data:/mosquitto/data
      - /docker/mosquitto/log:/mosquitto/log
    ports:
      - "1883:1883"
      - "9001:9001"
    environment:
      TZ: ${TZ}
    restart: unless-stopped
    networks:
      - external
    logging:
      driver: syslog
      options:
        syslog-address: "udp://192.168.1.141:514"
        tag: "mosquitto"

#  node-red:
#    image: nodered/node-red:latest
#    volumes:
#      - /docker/node-red/data:/data
#    ports:
#      - "1880:1880"
#    environment:
#      TZ: ${TZ}
#    restart: unless-stopped
#    networks:
#      - external
#    logging:
#      driver: syslog
#      options:
#        syslog-address: "udp://192.168.1.141:514"
#        tag: "node-red"

  phpmyadmin:
    image: bitnami/phpmyadmin:latest
    platform: linux/arm64
    volumes:
      - /docker/phpmyadmin/bitnami:/bitnami
    ports:
      - "8088:8080"
    environment:
      PMA_HOST: mariadb
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
      TZ: ${TZ}
    restart: unless-stopped
    networks:
      - external
      - internal
    depends_on:
      - mariadb
    logging:
      driver: syslog
      options:
        syslog-address: "udp://192.168.1.141:514"
        tag: "phpmyadmin"

  unifi-protect-downloader:
    image: unifitoolbox/protect-archiver:latest
    container_name: unifi_protect_downloader
    volumes:
      - /surveillance/unifi:/downloads
    environment:
      - ADDRESS=unifi.local  # Replace with your UniFi Protect IP/hostname
      - USERNAME=${ui_uname}  # Replace with your UniFi Protect username
      - PASSWORD=${ui_pass}  # Replace with your UniFi Protect password
      - VERIFY_SSL=false
      - CAMERAS=all  # Replace with specific camera IDs if needed
      - EVENTS_ONLY=true  # This option tells the downloader to download motion events only
      - USE_SUBFOLDERS=true
    restart: unless-stopped
    logging:
      driver: syslog
      options:
        syslog-address: "udp://192.168.1.141:514"
        tag: "unifi-protect-downloader"

  diyhue:
    image: diyhue/core:latest
    container_name: diyhue
    restart: unless-stopped
    # Host networking ensures SSDP/UPnP discovery so the Hue app finds the bridge reliably.
    network_mode: host
    environment:
      TZ: ${TZ}
      # Since mosquitto publishes 1883 on the host, use localhost here.
      MQTT_SERVER: mqtt://127.0.0.1:1883
      # If you enforce auth on Mosquitto, set these env vars in your stack/Portainer:
      # MQTT_USER: ${MQTT_USER}
      # MQTT_PASS: ${MQTT_PASS}
    volumes:
      - /docker/diyhue/config:/opt/hue-emulator/config
    depends_on:
      - mosquitto
    logging:
      driver: syslog
      options:
        syslog-address: "udp://192.168.1.141:514"
        tag: "diyhue"

networks:
  external:
    driver: bridge
  internal:
    driver: bridge
